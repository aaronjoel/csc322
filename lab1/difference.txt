# What's the difference between commands wc `grep -l int *` and grep -l int * | wc?
# How does the output differ? Put the answer into a text file named
# difference.txt (0.5%).
----------
wc `grep -l int *`
example output:
  13  106  544 difference.txt
  16   67  351 getMyStuff.sh
   3   27  141 myPipe.txt
  18  100  766 myStuff.txt
  50  300 1802 total
(I used "wc `grep -l a *` in my LabTask1 directory)
this command runs wc for each value returned by `grep -l int *`
grep -l lists the file names with matches, so wc is performed on each file returned
by the grep. it prints the corresponding number of newlines, words, and bytes
in the file
---------
grep -l int * | wc
the pipeline, |, causes the stdout of one command to be passed as the stdin to
the next command. in this case, grep searches for int in all files in the current directory and
prints those file names. wc returns the number of newlines, words, and bytes in the output returned
by "grep -l int *". example output(for `grep -l a *`):
difference.txt
getMyStuff.sh
myPipe.txt
myStuff.txt

this means wc counts the number of newlines, words, and bytes in those four lines, not each file
returned by those four lines
---------
tldr; DIFFERENCE
the pipe causes wc to run on the output returned, the backticks cause wc to run for each filename
returned by the grep command

